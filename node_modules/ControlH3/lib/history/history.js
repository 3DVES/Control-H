var HistorySchema = require('../models/historySchema');

function History(){

};

History.prototype.addHistory = function(info, callback){
	var data = {
       	backlogId : info.backlogId,
       	name : info.name,
    	description : info.description,
       	by : info.by,
       	utility : info.utility,
       	notes : info.notes,
       	status : info.status
    };

    var history = new HistorySchema(data);
    history.save(function(error, response){
    	if(error){
            return callback(error,null);            
        }
        else{
            if(!response){
                return callback(null,null);             
            }
            else{
                return callback(null,response);
            }
        }
    });
};

History.prototype.getHistoriesByBacklogId = function(idBacklog, callback){
	HistorySchema.find({backlogId : idBacklog}, function(error,response){
        if(error){
            return callback(error,null);            
        }
        else{
            if(!response){
                return callback(null,null);             
            }
            else{
                return callback(null,response);
            }
        }
    });
};

History.prototype.getHistoryById = function(id, callback){
	HistorySchema.findOne({_id : id}, function(error,response){
        if(error){
            return callback(error,null);            
        }
        else{
            if(!response){
                return callback(null,null);             
            }
            else{
                return callback(null,response);
            }
        }
    });
};

History.prototype.patchHistoryById = function(id, info, callback){
	this.getHistoryById(id, function(error, response){        
        if(error){
            return callback(error, null);
        }
        else if(!response){
            return callback(null, null);
        }
        else{           
            if(info.description != undefined) response.description = info.description;
            if(info.utility != undefined) reponse.utility = info. utility;
            if(info.notes != undefined) response.notes = info.notes;            
            if(info.status != undefined) response.status = info.status;
            response.save(function(err, response){
            	if(err){
                	return callback(err, null);
            	}else{
                	return callback(null,response);
            	}
            });                
         }
    });
};

var History = module.exports = new History();