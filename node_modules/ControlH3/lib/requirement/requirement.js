var RequirementSchema = require('../models/requirementSchema')

function Requirement(){

}

Requirement.prototype.addRequirement= function(idBacklog, info, callback){ 
    var data = {
        backlogId : idBacklog,
        idUser : info.idUser,
        task : info.task,
        detail : info.details,
        coments : info.coments,
        remainingTime : info.remainingTime,
        priority : info.priority,
        status : info.status
    } 
    
    var requirement= new RequirementSchema(data);
    requirement.save(function(error, response){
        if(error){
            return callback(error,null);            
        }
        else{
            if(!response){
                return callback(null,null);             
            }
            else{
                return callback(null,response);
            }
        }
    });
};

Requirement.prototype.getRequirementsByBacklogId = function(idBacklog, callback){
    RequirementSchema.find({backlogId : idBacklog}, function(error,response){
        if(error){
            return callback(error,null);            
        }
        else{
            if(!response){
                return callback(null,null);             
            }
            else{
                return callback(null,response);
            }
        }
    });
};

Requirement.prototype.getRequirementById = function(id, callback){
    RequirementSchema.findOne({_id : id}, function(error,response){
        if(error){
            return callback(error,null);            
        }
        else{
            if(!response){
                return callback(null,null);             
            }
            else{
                return callback(null,response);
            }
        }
    });
};

Requirement.prototype.patchRequirementById = function(id, info, callback){
    this.getRequirementById(id, function(error, requirement){        
        if(error){
            return callback(error, null);
        }
        else if(!requirement){
            return callback(null, null);
        }
        else{            
            if(info.details != undefined) requirement.details = info.details;
            if(info.comments != undefined) reponse.comments = info. comments;
            if(info.remainingTime != undefined) requirement.remainingTime = info.remainingTime;
            if(info.priority != undefined) requirement.priority = info.priority;
            if(info.status != undefined) requirement.status = info.status;
            requirement.save(function(err, response){
                if(err){
                    return callback(err, null);
                }else {
                    return callback(null,response);
                }
            });

        }
    });
};

var Requirement= module.exports= new Requirement();