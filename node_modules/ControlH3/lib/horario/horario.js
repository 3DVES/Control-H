var HorarioSchema = require('../models/horarioSchema');

function Horario (){

}

Horario.prototype.addHorario = function(horario, callback) {
	var horarioSchema = new HorarioSchema({
		idUser : horario.idUser,
		type : horario.type,
		year : horario.year, 
		month : horario.month,
		input : horario.input,
		finalised : false
	});

	horarioSchema.save(function(error,result){
		if(error)
    	{
    		callback(error,null);
    	}
    	else
    	{
    		if(!result){
    			callback(null,null);		
    		}
    		else
    		{
    			callback(null,horarioSchema);	
    		}
    	}
	});
};

Horario.prototype.getNoFinalizedHorario = function(idUser, callback) {
	HorarioSchema.findOne({idUser : idUser, finalised : false},function(error, horarioResult)
  	{
	    if (error){
			  callback(err,null);
	    }
	    else{
	    	if(!horarioResult){
	   			callback(null,null);		
	   		}
	   		else{
	   			callback(null,horarioResult);
	   		}
	   	}
	});
};

Horario.prototype.finalisedHorario = function(horario, callback) {
	HorarioSchema.findOne({idUser : horario.idUser, finalised : false},function(error, horarioResult)
  	{
	    if (error){
			  callback(error,null);
	    }else{
	    	if(!horarioResult){
	   			callback(null,null);		
	   		}
	   		else{
	   			horarioResult.output = horario.output;
	   			horarioResult.labored = horario.labored;
	   			horarioResult.finalised = true;
	   	
	   			horarioResult.save(function(error, horarioResult){
	   				if (error){
						return callback(error,null);
				    }
				    else{
				    	return callback(null,horarioResult);
				    }	
	   			});
	   		}
	    }
	});
};

Horario.prototype.getHoursByQuery = function(qury, day, callback) {
	HorarioSchema.find(qury,function(error, horarioResult)
  	{
  		day = (day != undefined)?day:0;
  		if (error){
			  callback(error,null);
	    }
	    else{
	    	if(!horarioResult){
	   			callback(null,null);		
	   		}
	   		else{
	   			var officeHours = 0;
	   			var houseHours = 0;
	   			for(hours in horarioResult){
					var inputHour = new Date(horarioResult[hours].input); 
					var outHour = new Date(horarioResult[hours].output); 
	
					if (day <= inputHour.getDate()){
		   				if(horarioResult[hours].type == "house"){
							houseHours += ((outHour-inputHour)/3600000);
		   				}else if(horarioResult[hours].type == "office"){
							officeHours += ((outHour-inputHour)/3600000);
		   				}
					}
	   			}
	   			callback(null,{
	   			 	officeHours : officeHours,
	   			 	houseHours : houseHours,
	   			 	total : officeHours + houseHours
	   			});
	   		}
	   	}
	});
};

/*
	result = JSON.parse(result);
	var fecha= new Date();
	fecha.getSeconds(result.timestamp + 1000 * 3600);
	a = new Date("February 13, 2014 04:29:00");
	b = new Date("February 12, 2014 03:00:00");
	//La diferencia se da en milisegundos asÃ­ que debes dividir entre 1000
	var c = ((a-b)/3600000);
  	console.log(result.timestamp + 1000 *3600);		
	res.send('Hora fecha	: ' + fecha);
*/
var Horario = module.exports = new Horario();