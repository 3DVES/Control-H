'use strict';

var User = require('./user/User');
var Horario = require('./horario/horario');
var Agenda =  require('./agenda/agenda');
var utilities = require('./utilities');

function ControlH3 (){

}

ControlH3.prototype.signIn = function(name, password, mac, callback) {
	var user = {
		name : name, 
		password : password
	};

	User.getUserByNameAndPassword(user, function(err, userResult){
		if(err){
			return callback(err, null);
		}
		else
		{
			if (userResult == null) {
				callback("Usuario o contraseña no valida", null);
			}else if(!userResult.logged){
				var type = (!mac)?'house':'office';
				utilities.getHora(function(){
					var horario = {
						idUser : userResult._id,
						type : type,
						year : currentDate.getFullYear(),
						month : currentDate.getMonth() + 1,
						input : currentDate	
					};

					Horario.addHorario(horario, function(err, horario){
						if(err){
							return callback(err, null);
						}
						else
						{
							userResult.logged = true;
							userResult.state = type;
							userResult.save();
							return callback(null, horario);
						}
					});		
				});
			}else{
				return callback("Usuario ya logeado", null);			
			}
		}	
	});
};


ControlH3.prototype.signOut = function(name, password, mac, labored, callback) {
	var user = {
		name : name, 
		password : password
	};

	User.getUserByNameAndPassword(user, function(err, userResult){
		if(err){
			return callback(err, null);
		}
		else
		{
			if (!userResult) {
				callback("Usuario o contraseña no valida", null);
			}else if(userResult.logged){
				var type = (!mac)?'house':'office';
				if(userResult.state == type){
					utilities.getHora(function(){
						var horario = {
							idUser : userResult._id,
							output : currentDate,
	   						labored : labored,
	   						finalised : true
						};

						Horario.finalisedHorario(horario, function(error, horarioResult){
							if(error){
								return callback(error, null);
							}else{
								userResult.logged = false;
								userResult.state = 'out';
								userResult.save();
								return callback(null, horarioResult);
							}					
						});
					});
				}
				else
				{
					return callback("marque salida desde la oficina o por internet "
						+"al igual que marco entrada");
				}
			}
			else
			{
				return callback("Ud no se encuentra logged");
			}
		}
	});
};

ControlH3.prototype.passwordChange= function(form,callback){
	User.changePassword(form,function(err,result){
		if(err){
			callback(err, null);
		}else{			
			if(!result){
				callback("User wasn't found",null);
			}	
			else{
				callback(null,result);
			}
		}
	});
};

ControlH3.prototype.signUp = function(user, callback) {
	User.addUser(user, function(err, result){
		if(err){
			callback(err, null);
		}else{
			callback(null, result);
		}
	});
};

ControlH3.prototype.deleteAccount = function(){

};

ControlH3.prototype.workingNow = function(callback){
	User.getUsersLoggedOn(function(err, result){
		if(err){
			callback(err, null);
		}else{
			callback(null, result);
		}
	});
};

ControlH3.prototype.hi= function(callback){
	console.log("hi, good day!!!");
	utilities.getHora(callback);
};

ControlH3.prototype.addSchedule= function(Usuario,agenda,callback){
	Agenda.addAgenda(Usuario,agenda,function(err,result){
		if(err){
			callback(err, null);
		}else{
			callback(null, result);
		}
	});
};

ControlH3.prototype.getShedulesByUser= function(Usuario,callback){
	Agenda.getAgendaVigenteByIdUser(Usuario,function(err,result){
		if(err){
			callback(err,null);
		}else{
			callback(null,result);
		}
	});

};

ControlH3.prototype.getSchedules = function(callback){
	Agenda.getAGendasVigentesUsuarios(function(err,result){
		if(err){
			callback(err,null);
		}else{
			callback(null,result);
		}
	});
};

ControlH3.prototype.getTotalHours = function(info, callback){
	var query = {
		idUser  : info.idUser,
		year  : info.year,
		month  : info.month,
		finalised : true
	}

	Horario.getHoursByQuery(query, info.day, function(err,result){
		if(err){
			callback(err,null);
		}else{
			callback(null,result);
		}
	});
};

ControlH3.prototype.getHoursInDateRange = function (info, callback){
	var query = {
		input: {
			$gte : new Date(info.initDate),
			$lt  : new Date(info.finalDate)  
		},
		userId: info.idUser
	}

	Horario.rangeTest(query, null, function (err, result){
		if(err){
			callback(err, null);
		}
		else{
			callback(null, result);
		}
	});
}

var controlh3 = module.exports = exports = new ControlH3;