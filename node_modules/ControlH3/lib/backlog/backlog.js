var backlogSchema = require('../models/backlogSchema')

function Backlog(){

}

Backlog.prototype.addBacklog= function(info, callback){	
	var backlog= new backlogSchema(info);
	backlog.save(function(error,response){
		if(error){
			return callback(error, null);			
		}
		else{
			if(!response){
				return callback(null, null);				
			}
			else{
				return callback(null, response);
			}
		}
	});
};

Backlog.prototype.getBacklogsByProjectIdAndType = function(projectId, type, callback){
	backlogSchema.find({projectId : projectId, type : type}, function (error, response){
		if(error){
			return callback(error, null);
		}else if(!response){
			return callback(null, null);
		}else{
			return callback(null,response);
		}
	});
};

Backlog.prototype.getBacklogByIdProjectAndType = function(id, projectId, type, callback){
	backlogSchema.findOne({_id : id, projectId : projectId, type : type}, function (error, response){
		if(error){
			return callback(error, null);
		}else if(!response){
			return callback(null, null);
		}else{
			return callback(null,response);
		}
	});
};

Backlog.prototype.patchBacklogsById = function(id, data, callback){
	backlogSchema.findOne({_id:id},function(err, backlog){
		if(err){
			return callback(err,null);
		}else if(!backlog){
			return callback("Could not find the backlog with the provided ID",null);
		}else{
			if(data.editable != undefined) backlog.editable = data.editable;
			backlog.save(function(error,response){
				if(error){
					return callback(error,null);
				}else {
					return callback(null, response);
				}
			});
		}
	});
};



var Backlog= module.exports= new Backlog();